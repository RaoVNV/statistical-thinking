?knitr::include_graphics
541 * 219
1/101
3/101
503 - 71
music = read.csv(file.choose())
head(music)
music$pop = ifelse(music$Genre == "Pop", "Pop", "Other")
head(music)
table(music$pop)
t.test(Readability ~ pop, data = music)
t.test(music[music$Genre == "Pop", music$Readability], music[music$Genre != "Pop", music$Readability])
t.test(music[music$Genre == "Pop", ]$Readability, music[music$Genre != "Pop", ]$Readability)
t.test(music[music$Genre == "Country", ]$Readability, music[music$Genre != "Country", ]$Readability)
t.test(music[music$Genre == "Country", ]$Readability, music[music$Genre == "Pop", ]$Readability)
t.test(music[music$Genre == "R&B", ]$Readability, music[music$Genre == "Pop", ]$Readability)
nrow(music)
music
music[music$Artist == "Robin Thicke", ]
music[music$Artist == "Eminem", ]
music[music$Artist == "Adele", ]
music[music$Artist == "Beastie Boys", ]
music[music$Artist == "Miley Cryrus", ]
music[music$Artist == "Rolling STones", ]
music[music$Artist == "Rolling Stones", ]
music[music$Artist == "Beyonce", ]
t.test(music[music$Genre == "R&B", ]$Readability, music[music$Genre == "Pop", ]$Readability)
mean(music[music$Genre == "R&B", ]$Readability)
mean(music[music$Genre == "Pop", ]$Readability)
mean(music[music$Genre == "Country", ]$Readability)
mean(music[music$Genre == "Rock", ]$Readability)
t.test(music[music$Genre == "Country", ]$Readability, music[music$Genre == "Pop", ]$Readability)
t.test(music[music$Genre == "Country", ]$Readability, music[music$Genre == "Rock", ]$Readability)
summary(music)
table(music[music$Year <= 2009])
table(music[music$Year <= 2009, ])
table(music[music$Year <= 2009, ]$Readability)
t.test(music[music$Year <= 2009, ]$Readability, music[music$Year > 2009, ]$Readability)
library(dplyr)
music %>% filter(Year <= 2008) %>% summarize(M = mean(Readability), SD=sd(Readability), N=n())
music %>% filter(Year > 2008) %>% summarize(M = mean(Readability), SD=sd(Readability), N=n())
t.test(music[music$Year <= 2008, ]$Readability, music[music$Year > 2008, ]$Readability)
music %>% filter(Year > 2005) %>% summarize(M = mean(Readability), SD=sd(Readability), N=n())
music %>% filter(Year <= 2005) %>% summarize(M = mean(Readability), SD=sd(Readability), N=n())
t.test(music[music$Year <= 2005, ]$Readability, music[music$Year > 2005, ]$Readability)
library(mosaic)
install.packages("mosaic")
library(mosaic)
data(
TenMileRace)
head(TenMileRace)
library(babynames)
install.packages("babynames")
library(babynames)
head(babaynames)
head(babynames)
?babynames
babaynames %>% filter(year == 1917) %>% summarize(n())
babynames %>% filter(year == 1917) %>% summarize(n())
b1917 = babynames %>% filter(year == 1917)
nrow(b1917)
b2017 = babynames %>% filter(year == 2017)
nrow(b2017)
babynames %>% filter(year == 2016) %>% summarize(n())
babynames %>% filter(year == 2015) %>% summarize(n())
babynames %>% filter(year == 1915) %>% summarize(n())
babynames %>% filter(year == 1915) %>% sample_n(size = 3)
b1915 = babynames %>% filter(year == 1915) %>% sample_n(size = 25, replace = FALSE)
b2015 = babynames %>% filter(year == 1915) %>% sample_n(size = 25, replace = FALSE)
b1915
set.seed(1915)
b1915 = babynames %>% filter(year == 1915) %>% sample_n(size = 25, replace = FALSE)
set.seed(200015)
b2015 = babynames %>% filter(year == 1915) %>% sample_n(size = 25, replace = FALSE)
b2015
set.seed(200015)
b2015 = babynames %>% filter(year == 1915) %>% sample_n(size = 25, replace = FALSE)
b2015
library(stringr)
?`stringr-package`
stringr::str_length(b2015$name)
set.seed(1915)
b1915 = babynames %>% filter(year == 1915) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name))
b1915
b2015 = babynames %>% filter(year == 2015) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name))
t.test(b1915$num_letters, b2015$num_letters, var.equal = TRUE)
set.seed(1915)
b1915 = babynames %>% filter(year == 1915) %>% sample_n(size = 50, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name))
set.seed(200015)
b2015 = babynames %>% filter(year == 2015) %>% sample_n(size = 50, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name))
t.test(b1915$num_letters, b2015$num_letters, var.equal = TRUE)
set.seed(1915)
b1915 = babynames %>% filter(year == 1915) %>% sample_n(size = 20, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name))
set.seed(200015)
b2015 = babynames %>% filter(year == 2015) %>% sample_n(size = 20, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name))
t.test(b1915$num_letters, b2015$num_letters, var.equal = TRUE)
set.seed(1915)
b1915 = babynames %>% filter(year == 1915) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name))
set.seed(200015)
b2015 = babynames %>% filter(year == 2015) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name))
t.test(b1915$num_letters, b2015$num_letters, var.equal = TRUE)
set.seed(1915)
b1915 = babynames %>% filter(year == 1915) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name)) %>% summarize(M = mean(num_letters))
set.seed(1915)
babynames %>% filter(year == 1915) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name)) %>% summarize(M = mean(num_letters))
summary(babynames)
set.seed(1915)
babynames %>% filter(year == 1880) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name)) %>% summarize(M = mean(num_letters))
set.seed(1915)
babynames %>% filter(year == 1900) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name)) %>% summarize(M = mean(num_letters))
set.seed(1915)
babynames %>% filter(year == 2000) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name)) %>% summarize(M = mean(num_letters))
set.seed(1915)
babynames %>% filter(year == 2010) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name)) %>% summarize(M = mean(num_letters))
set.seed(1915)
babynames %>% filter(year == 1910) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name)) %>% summarize(M = mean(num_letters))
set.seed(1915)
babynames %>% filter(year == 1915) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name)) %>% summarize(M = mean(num_letters))
set.seed(1915)
babynames %>% filter(year == 1920) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name)) %>% summarize(M = mean(num_letters))
set.seed(1915)
babynames %>% filter(year == 1950) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name)) %>% summarize(M = mean(num_letters))
set.seed(1915)
babynames %>% filter(year == 1940) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name)) %>% summarize(M = mean(num_letters))
set.seed(1915)
babynames %>% filter(year == 1945) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name)) %>% summarize(M = mean(num_letters))
set.seed(1915)
babynames %>% filter(year == 2002) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name)) %>% summarize(M = mean(num_letters))
set.seed(1915)
babynames %>% filter(year == 2001) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name)) %>% summarize(M = mean(num_letters))
set.seed(1915)
babynames %>% filter(year == 1995) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name)) %>% summarize(M = mean(num_letters))
set.seed(2001)
babynames %>% filter(year == 1995) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name)) %>% summarize(M = mean(num_letters))
set.seed(1915)
b1945 = babynames %>% filter(year == 1945) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name))
set.seed(1915)
b1995 = babynames %>% filter(year == 1995) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name))
t.test(b1945$num_letters, b1995$num_letters, var.equal = TRUE)
t.test(b1945$num_letters, b1995$num_letters, var.equal = TRUE, alt = "less")
summary(b1995)
set.seed(2001)
b1995 = babynames %>% filter(year == 1995) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name))
t.test(b1945$num_letters, b1995$num_letters, var.equal = TRUE, alt = "less")
t.test(b1945$num_letters, b1995$num_letters, var.equal = TRUE, alt = "greater")
rbind(b1945, b1995) %>% select(name, year, num_letters)
library(babynames)
set.seed(1915)
b1945 = babynames %>% filter(year == 1945) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name))
set.seed(2001)
b1995 = babynames %>% filter(year == 1995) %>% sample_n(size = 25, replace = FALSE) %>% mutate(num_letters = stringr::str_length(name))
allYears = rbind(b1945, b1995) %>% select(name, year, num_letters)
write.csv(allYears, row.names = FALSE, file = "~/Desktop/babynames.csv")
